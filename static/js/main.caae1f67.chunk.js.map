{"version":3,"sources":["App.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","FeedbackOptions","options","onLeaveFeedback","map","option","button","onClick","Statistics","props","Object","keys","key","item","Notification","message","App","state","good","neutral","bad","handleLeaveFeedback","e","label","target","innerText","toLowerCase","setState","prevState","values","this","reduce","acc","value","total","countTotalFeedback","Math","round","goodPercentage","countPositiveFeedbackPercentage","feedbackOptionsComponent","createFeedbackOptionsComponent","statisticsComponent","createStatisticsComponent","notificationComponent","container","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,UAAY,yB,gBCA9BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,QAAU,gC,qLCUbC,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASC,UAAWC,IAAEC,QAAtB,UACE,6BAAKJ,IACL,8BAAMC,Q,gBCIKI,EAPS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtBD,EAAQE,KAAI,SAAAC,GAAM,OAChB,wBAAQP,UAAWC,IAAEO,OAAqBC,QAASJ,EAAnD,SACGE,GAD+BA,O,iBCIvBG,EAPI,SAAAC,GAAK,OACtBC,OAAOC,KAAKF,GAAOL,KAAI,SAAAQ,GAAG,OACxB,uBAAgBd,UAAWC,IAAEc,KAA7B,UACGD,EADH,KACUH,EAAMG,KADLA,O,iBCEAE,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,sBAAMjB,UAAWC,IAAEgB,QAAnB,SAA6BA,KC+EhBC,E,4MA3EbC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAkCPC,oBAAsB,SAAAC,GACpB,IAAMC,EAAQD,EAAEE,OAAOC,UAAUC,cAEjC,EAAKC,UAAS,SAAAC,GAAS,sBACpBL,EAAQK,EAAUL,GAAS,O,wDAnChC,WAEE,OADeb,OAAOmB,OAAOC,KAAKb,OACpBc,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,K,6CAGpD,WACE,IAAMC,EAAQJ,KAAKK,qBACnB,OAAOD,EAAQE,KAAKC,MAAyB,IAAlBP,KAAKb,MAAMC,KAAcgB,GAAS,I,4CAG/D,SAA+BhC,GAC7B,OACE,cAAC,EAAD,CACEA,QAASA,EACTC,gBAAiB2B,KAAKT,wB,uCAK5B,SAA0Ba,EAAOI,GAC/B,OACE,cAAC,EAAD,CACEpB,KAAMY,KAAKb,MAAMC,KACjBC,QAASW,KAAKb,MAAME,QACpBC,IAAKU,KAAKb,MAAMG,IAChBc,MAAOA,EACPI,eAAc,UAAKA,EAAL,U,oBAapB,WACE,IAAMpC,EAAUQ,OAAOC,KAAKmB,KAAKb,OAC3BiB,EAAQJ,KAAKK,qBACbG,EAAiBR,KAAKS,kCAEtBC,EACJV,KAAKW,+BAA+BvC,GAChCwC,EAAsBZ,KAAKa,0BAC/BT,EACAI,GAEIM,EACJ,cAAC,EAAD,CAAc7B,QAAS,0BAGzB,OACE,sBAAKjB,UAAWC,IAAE8C,UAAlB,UACE,cAAC,EAAD,CACEjD,MAAO,wBACPC,SAAU2C,IAEZ,cAAC,EAAD,CACE5C,MAAO,aACPC,SAAUqC,EAAQQ,EAAsBE,W,GArEhCE,IAAMC,WCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.caae1f67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__1vE2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","import React from 'react';\nimport s from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <section className={s.section}>\n    <h2>{title}</h2>\n    <div>{children}</div>\n  </section>\n);\n\nexport default Section;\n\nSection.propTypes = {\n  children: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import s from './FeedbackOptions.module.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) =>\n  options.map(option => (\n    <button className={s.button} key={option} onClick={onLeaveFeedback}>\n      {option}\n    </button>\n  ));\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import s from './Statistics.module.css';\nimport React from 'react';\n\nconst Statistics = props =>\n  Object.keys(props).map(key => (\n    <span key={key} className={s.item}>\n      {key}: {props[key]}\n    </span>\n  ));\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n  <span className={s.message}>{message}</span>\n);\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import s from './App.module.css';\nimport React from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback() {\n    const values = Object.values(this.state);\n    return values.reduce((acc, value) => acc + value, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    const total = this.countTotalFeedback();\n    return total ? Math.round((this.state.good * 100) / total) : 0;\n  }\n\n  createFeedbackOptionsComponent(options) {\n    return (\n      <FeedbackOptions\n        options={options}\n        onLeaveFeedback={this.handleLeaveFeedback}\n      />\n    );\n  }\n\n  createStatisticsComponent(total, goodPercentage) {\n    return (\n      <Statistics\n        good={this.state.good}\n        neutral={this.state.neutral}\n        bad={this.state.bad}\n        total={total}\n        goodPercentage={`${goodPercentage} %`}\n      />\n    );\n  }\n\n  handleLeaveFeedback = e => {\n    const label = e.target.innerText.toLowerCase();\n\n    this.setState(prevState => ({\n      [label]: prevState[label] + 1,\n    }));\n  };\n\n  render() {\n    const options = Object.keys(this.state);\n    const total = this.countTotalFeedback();\n    const goodPercentage = this.countPositiveFeedbackPercentage();\n\n    const feedbackOptionsComponent =\n      this.createFeedbackOptionsComponent(options);\n    const statisticsComponent = this.createStatisticsComponent(\n      total,\n      goodPercentage,\n    );\n    const notificationComponent = (\n      <Notification message={'There is no feedback.'} />\n    );\n\n    return (\n      <div className={s.container}>\n        <Section\n          title={'Please leave feedback'}\n          children={feedbackOptionsComponent}\n        />\n        <Section\n          title={'Statistics'}\n          children={total ? statisticsComponent : notificationComponent}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}